type TaskDiscussion @model @auth(rules: [{allow: public}]) {
  id: ID!
  T: ID! @index(name: "byTask")
  Comment: String!
  CommentDateTime: AWSDateTime!
  CommentTeamMember: String!
}

enum TaskPriority {
  HIGH
  MEDIUM
  LOW
}

enum TaskStatus {
  ACTIVE
  CLOSED
  ARCHIVED
}

type Task @model @auth(rules: [{allow: public}]) {
  id: ID!
  Team: ID! @index(name: "byTeam")
  Name: String!
  Description: String
  OwningTeamMembers: [String]!
  DueDateTime: AWSDateTime
  Status: TaskStatus!
  Priority: TaskPriority!
  CompletedByTeamMember: String
  CompletedDateTime: AWSDateTime
  TaskDiscussions: [TaskDiscussion] @hasMany(indexName: "byTask", fields: ["id"])
}

enum UserProfileVisibility {
  PRIVATE
  PUBLIC
  ARCHIVED
}

enum TeamVisibility {
  PRIVATE
  PUBLIC
  ARCHIVED
}

enum TeamMemberStatus {
  INVITED
  CONFIRMED
  DECLINED
  DEPARTED
}

enum TeamMemberRole {
  ADMINISTRATOR
  MEMBER
}

type TeamMember @model @auth(rules: [{allow: public}]) {
  id: ID!
  Team: ID! @index(name: "byTeam")
  UserProfile: ID! @index(name: "byUserProfile")
  Role: TeamMemberRole!
  Status: TeamMemberStatus!
  InvitedDateTime: AWSDateTime!
  InvitedByUserProfile: String!
  ConfirmedDateTime: AWSDateTime
  DeclinedDateTime: AWSDateTime
  DepartedDateTime: AWSDateTime
  DepartedComment: String
}

enum TeamType {
  TEAM
  BAND
  GROUP
}

type Team @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String!
  TeamType: TeamType!
  TeamMembers: [TeamMember!] @hasMany(indexName: "byTeam", fields: ["id"])
  Visibility: TeamVisibility!
  Description: String!
  Tasks: [Task] @hasMany(indexName: "byTeam", fields: ["id"])
}

type UserProfile @model @auth(rules: [{allow: public}]) {
  Visibility: UserProfileVisibility!
  Username: String!
  Name: String!
  Tagline: String
  Skills: [String]!
  Interests: [String]!
  About: String
  Location: String
  TeamMembers: [TeamMember!] @hasMany(indexName: "byUserProfile", fields: ["id"])
  id: ID!
}
 